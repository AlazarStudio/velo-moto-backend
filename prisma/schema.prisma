// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  email     String   @unique
  login     String   @unique
  name      String
  password  String
}

model Group {
  id   Int    @id @default(autoincrement())
  name String
  Item Item[]
}

model Item {
  id              Int        @id @default(autoincrement())
  createdAt       DateTime   @default(now()) @map("created_at")
  updatedAt       DateTime   @updatedAt @map("updated_at")
  name            String
  images          String[]
  description     String
  group           Group      @relation(fields: [groupId], references: [id])
  groupId         Int
  price           Int
  priceForSale    Int        @map("price_for_sale")
  code            Int
  barcode         String
  nds             Int?       @default(0)
  frame           String
  system          String
  size            String
  ratchet         String
  weight          String
  speed           String
  fork            String
  carriage        String
  flywheels       String
  breaks          String
  frontDerailleur String     @map("front_derailleur")
  backDerailleur  String     @map("back_derailleur")
  bushings        String
  rubber          String
  itemCount       Int?       @default(0) @map("item_count")
  Receipt         Receipt[]
  Sale            Sale[]
  WriteOff        WriteOff[]
}

model Receipt {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  quantity  Int
  price     Int
}

model Sale {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  quantity  Int
  price     Int
}

model WriteOff {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  item      Item     @relation(fields: [itemId], references: [id])
  itemId    Int
  quantity  Int
  reason    String
}
